module.exports = [
  {
    name: 'Javascript',
    category: 'Front-End',
    toolTip: 'My primary programming language :)',
    id: 1,
  },
  {
    name: 'HTML',
    category: 'Front-End',
    toolTip: 'As one of the three pillars of the internet, HTML is one of my key skills.',
    id: 2,
  },
  {
    name: 'Canvas',
    category: 'Front-End',
    toolTip: 'I developed the UI for my Block Fall game using HTML Canvas!',
    id: 44
  },
  {
    name: 'CSS',
    category: 'Front-End',
    toolTip: 'This website was styled by me from scratch using CSS Modules.',
    id: 3,
  },
  {
    name: 'Tailwind CSS',
    category: 'Front-End',
    toolTip: 'A powerful utility-first CSS framework. I am learning Tailwind CSS through my Block Fall project.',
    id: 26,
  },
  {
    name: 'React',
    category: 'Front-End',
    toolTip: 'My favourite front end framework. This website was created with React.',
    id: 4,
  },
  {
    name: 'Typescript',
    category: 'Other',
    toolTip: 'I gained familiarity with adding strict typing to JavaScript through using JSDocs at WW. Typescript is similar and I have been adding it to personal projects to enhance my skills.',
    id: 25,
  },
  {
    name: 'jQuery',
    category: 'Front-End',
    toolTip: 'I am proficient developing with jQuery.',
    id: 5,
  },
  {
    name: 'Node.js/Express',
    category: 'Back-End',
    toolTip: 'My weapon of choice for all things back end.',
    id: 6,
  },
  {
    name: 'gRPC',
    category: 'Back-End',
    toolTip: 'gRPC is a cross-platform high performance remote procedure call framework. My team at WW was one of the first in the company to employ this framework, allowing for efficient communication between micro-services.',
    id: 38,
  },
  {
    name: 'RESTful API',
    category: 'Back-End',
    toolTip: 'The APIs for all my projects that include a back end follow RESTful principles.',
    id: 55,
  },
  {
    name: 'Micro-Services',
    category: 'Back-End',
    toolTip: 'My team at WW moved from a monolithic codebase to use micro-services. I have built custom services from the ground up and have extensive experience navigating a micro-services based codebase.',
    id: 20,
  },
  {
    name: 'MongoDB',
    category: 'Back-End',
    toolTip: 'I have set up many MongoDB databases and have experience with Mongoose and native Mongo methods. My Lodging Marketplace App uses MongoDB.',
    id: 7,
  },
  {
    name: 'PostgreSQL',
    category: 'Back-End',
    toolTip: 'I have experience scaling a PostgreSQL app (my Movie Reviews App) to over 100 million records, creating custom SQL files for initialization and SQL commands for CRUD app functionality.',
    id: 8,
  },
  {
    name: 'MySQL',
    category: 'Back-End',
    toolTip: 'I have experience setting up MySQL (with Sequelize) for CRUD functionality.',
    id: 9,
  },
  {
    name: 'Git/Github',
    category: 'Other',
    toolTip: 'All of my development uses Git workflow. Use the link on the landing page to check out my profile :)',
    id: 10,
  },
  {
    name: 'npm',
    category: 'Other',
    toolTip: 'The Node.js package manager I use.',
    id: 11,
  },
  {
    name: 'Webpack',
    category: 'Other',
    toolTip: 'Used to transpile and bundle jsx files into pure JavaScript so it can be run in the browser.',
    id: 12,
  },
  {
    name: 'Mocha/Chai',
    category: 'Testing',
    toolTip: 'Mocha is a JavaScript testing framework and Chai is an assertion library. I have used these together to test my projects.',
    id: 16,
  },
  {
    name: 'Jest/Enzyme',
    category: 'Testing',
    toolTip: 'Jest is a JavaScript unit testing framework and Enzyme is a testing utility for React.js. I have used them to test React.js components.',
    id: 17,
  },
  {
    name: 'Cypress.io',
    category: 'Testing',
    toolTip: 'An end to end testing library. I used this to test the pagination micro-service on my Lodging Marketplace App.',
    id: 15,
  },
  {
    name: 'K6.io',
    category: 'Testing',
    toolTip: 'An open source load testing tool. I used it to stress test my Movie Reviews App locally.',
    id: 13,
  },
  {
    name: 'Loader.io',
    category: 'Testing',
    toolTip: 'A cloud based load testing tool. I stress tested my AWS deployed Movie Reviews App using payload files to simulate production.',
    id: 14,
  },
  {
    name: 'TDD',
    category: 'Testing',
    toolTip: 'This powerful approach reduces debugging time and ensures reliable code. I have experience navigating large testing suites as well as developing my own unit, integration and E2E tests.',
    id: 22,
  },
  {
    name: 'AWS (EC2/S3)',
    category: 'Other',
    toolTip: 'I have deployed various applications and databases to EC2 instances. I host all images for my apps on S3 to decrease load time.',
    id: 18,
  },
  {
    name: 'Heroku',
    category: 'Other',
    toolTip: 'I have deployed multiple apps to Heroku.',
    id: 19,
  },
  {
    name: 'Agile',
    category: 'Collaboration',
    toolTip: 'I have extensive experience with agile practices such as daily stand-ups, pair programming, reflectives, sprints, etc.',
    id: 21,
  },
  {
    name: 'Eslint',
    category: 'Other',
    toolTip: 'Everyone makes mistakes. A linter is very helpful in catching those errors before they break production :P',
    id: 23,
  },
  {
    name: 'JSDocs',
    category: 'Other',
    toolTip: 'This is a javascript documentation tool used for annotating. We used this at WW to ensure clean code.',
    id: 39,
  },
  {
    name: 'Trello',
    category: 'Collaboration',
    toolTip: 'A Ticketing tool which helps keep projects and teams organized and efficient. I have used this to collaborate with colleagues while working on my projects.',
    id: 24,
  },
  {
    name: 'Jira',
    category: 'Collaboration',
    toolTip: 'We used Jira at WW to plan our sprints and organize tech debt and future goals.',
    id: 40,
  },
  {
    name: 'Confluence',
    category: 'Collaboration',
    toolTip: 'We used Confluence at WW to document our APIs, micro-services, work practices, etc.',
    id: 41,
  }
];
